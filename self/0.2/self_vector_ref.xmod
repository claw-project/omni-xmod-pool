<OmniFortranModule version="1.0">
  <name>self_vector_ref</name>
  <depends>
    <name>self_object</name>
  </depends>
  <typeTable>
    <FstructType type="S7fd811511cc0" imported_id="S7fdf4ad09370" is_abstract="true">
      <symbols>
      </symbols>
      <typeBoundProcedures>
        <typeBoundProcedure type="F7fd811512db0">
          <name>is_equal</name>
          <binding>
            <name>is_equal_function</name>
          </binding>
        </typeBoundProcedure>
        <typeBoundProcedure type="F7fd811513280">
          <name>to_string</name>
          <binding>
            <name>to_string_function</name>
          </binding>
        </typeBoundProcedure>
        <typeBoundGenericProcedure>
          <name>==</name>
          <binding>
            <name>is_equal</name>
          </binding>
        </typeBoundGenericProcedure>
      </typeBoundProcedures>
    </FstructType>
    <FfunctionType type="F7fd811511ed0" return_type="Flogical" is_recursive="true">
      <params>
        <name type="S7fd811513c20" imported_id="S7fdf4ad0d220">this</name>
        <name type="S7fd811514240" imported_id="S7fdf4ad0d820">that</name>
      </params>
    </FfunctionType>
    <FbasicType type="S7fd811513d70" imported_id="S7fdf4ad0ca80" ref="S7fd811511cc0"/>
    <FbasicType type="S7fd811513c20" imported_id="S7fdf4ad0d220" intent="in" is_class="true" ref="S7fd811513d70"/>
    <FbasicType type="S7fd811514240" imported_id="S7fdf4ad0d820" intent="in" is_class="true"/>
    <FstructType type="S7fd8115028f0" imported_id="S7fdf4ad09370" is_abstract="true">
      <symbols>
      </symbols>
      <typeBoundProcedures>
        <typeBoundProcedure type="F7fd811502e30">
          <name>is_equal</name>
          <binding>
            <name>is_equal_function</name>
          </binding>
        </typeBoundProcedure>
        <typeBoundProcedure type="F7fd8115036a0">
          <name>to_string</name>
          <binding>
            <name>to_string_function</name>
          </binding>
        </typeBoundProcedure>
        <typeBoundGenericProcedure>
          <name>==</name>
          <binding>
            <name>is_equal</name>
          </binding>
        </typeBoundGenericProcedure>
      </typeBoundProcedures>
    </FstructType>
    <FbasicType type="S7fd811505130" imported_id="S7fdf4ad0ca80" ref="S7fd8115028f0"/>
    <FbasicType type="S7fd811504a00" imported_id="S7fdf4ad0d220" intent="in" is_class="true" ref="S7fd811505130"/>
    <FbasicType type="S7fd811504da0" imported_id="S7fdf4ad0d820" intent="in" is_class="true"/>
    <FfunctionType type="F7fd8115121f0" return_type="C7fd811514390" is_recursive="true">
      <params>
        <name type="S7fd811514710" imported_id="S7fdf4ad0f8f0">this</name>
      </params>
    </FfunctionType>
    <FbasicType type="C7fd8115144e0" ref="Fcharacter">
      <len is_assumed_shape="true">
      </len>
    </FbasicType>
    <FbasicType type="C7fd811514390" is_allocatable="true" ref="C7fd8115144e0"/>
    <FbasicType type="S7fd811514860" imported_id="S7fdf4ad0f150" ref="S7fd811511cc0"/>
    <FbasicType type="S7fd811514710" imported_id="S7fdf4ad0f8f0" intent="in" is_class="true" ref="S7fd811514860"/>
    <FbasicType type="S7fd8115060c0" imported_id="S7fdf4ad0f150" ref="S7fd8115028f0"/>
    <FbasicType type="S7fd8115057c0" imported_id="S7fdf4ad0f8f0" intent="in" is_class="true" ref="S7fd8115060c0"/>
    <FfunctionType type="F7fd811512510" return_type="Flogical" is_recursive="true">
      <params>
        <name type="S7fd811514e80" imported_id="S7fdf4ad12810">this</name>
        <name type="S7fd8115150b0" imported_id="S7fdf4ad12e10">that</name>
      </params>
    </FfunctionType>
    <FbasicType type="S7fd811514e80" imported_id="S7fdf4ad12810" intent="in" is_class="true"/>
    <FbasicType type="S7fd8115150b0" imported_id="S7fdf4ad12e10" intent="in" is_class="true"/>
    <FbasicType type="S7fd811506840" imported_id="S7fdf4ad12810" intent="in" is_class="true"/>
    <FbasicType type="S7fd811506bc0" imported_id="S7fdf4ad12e10" intent="in" is_class="true"/>
    <FfunctionType type="F7fd811512830" return_type="C7fd811515200">
      <params>
        <name type="S7fd811515580" imported_id="S7fdf4ad210f0">this</name>
      </params>
    </FfunctionType>
    <FbasicType type="C7fd811515350" is_allocatable="true" ref="Fcharacter">
      <len is_assumed_shape="true">
      </len>
    </FbasicType>
    <FbasicType type="C7fd811515200" is_allocatable="true" ref="C7fd811515350"/>
    <FbasicType type="S7fd811515580" imported_id="S7fdf4ad210f0" intent="in" is_pointer="true" is_class="true"/>
    <FbasicType type="S7fd81150a3a0" imported_id="S7fdf4ad210f0" intent="in" is_pointer="true" is_class="true"/>
    <FfunctionType type="F7fd811512b50" return_type="C7fd8115156d0" is_recursive="true">
      <params>
        <name type="S7fd811515a50" imported_id="S7fdf4ad25170">this</name>
      </params>
    </FfunctionType>
    <FbasicType type="C7fd811515820" is_allocatable="true" ref="Fcharacter">
      <len is_assumed_shape="true">
      </len>
    </FbasicType>
    <FbasicType type="C7fd8115156d0" is_allocatable="true" ref="C7fd811515820"/>
    <FbasicType type="S7fd811515a50" imported_id="S7fdf4ad25170" intent="in" is_class="true"/>
    <FbasicType type="S7fd81150b9e0" imported_id="S7fdf4ad25170" intent="in" is_class="true"/>
    <FstructType type="S7fd811518110" is_public="true" extends="S7fd811511cc0">
      <symbols>
        <id type="Fint">
          <name>current_size</name>
          <value>
            <FintConstant type="Fint">0</FintConstant>
          </value>
        </id>
        <id type="Fint">
          <name>maximum_size</name>
          <value>
            <FintConstant type="Fint">0</FintConstant>
          </value>
        </id>
        <id type="Flogical">
          <name>verbose</name>
          <value>
            <FlogicalConstant type="Flogical">.FALSE.</FlogicalConstant>
          </value>
        </id>
        <id type="A7fd81151a850">
          <name>items</name>
        </id>
      </symbols>
      <typeBoundProcedures>
        <typeBoundProcedure type="F7fd81151ae70" pass="pass">
          <name>clone</name>
          <binding>
            <name>clone</name>
          </binding>
        </typeBoundProcedure>
        <typeBoundProcedure type="F7fd81151b440" pass="pass">
          <name>init</name>
          <binding>
            <name>init</name>
          </binding>
        </typeBoundProcedure>
        <typeBoundProcedure type="F7fd81151ba30" pass="pass">
          <name>init_from_array</name>
          <binding>
            <name>init_from_array</name>
          </binding>
        </typeBoundProcedure>
        <typeBoundProcedure type="F7fd81151c040" pass="pass">
          <name>destroy</name>
          <binding>
            <name>destroy</name>
          </binding>
        </typeBoundProcedure>
        <typeBoundProcedure type="F7fd81151c650" pass="pass">
          <name>clear</name>
          <binding>
            <name>clear</name>
          </binding>
        </typeBoundProcedure>
        <typeBoundProcedure type="F7fd81151cc60" pass="pass">
          <name>extend</name>
          <binding>
            <name>extend</name>
          </binding>
        </typeBoundProcedure>
        <typeBoundProcedure type="F7fd81151d270" pass="pass">
          <name>at</name>
          <binding>
            <name>at</name>
          </binding>
        </typeBoundProcedure>
        <typeBoundProcedure type="F7fd81151d880" pass="pass">
          <name>set</name>
          <binding>
            <name>set</name>
          </binding>
        </typeBoundProcedure>
        <typeBoundProcedure type="F7fd81151de90" pass="pass">
          <name>find</name>
          <binding>
            <name>find</name>
          </binding>
        </typeBoundProcedure>
        <typeBoundProcedure type="F7fd81151e4a0" pass="pass">
          <name>add_item</name>
          <binding>
            <name>add_item</name>
          </binding>
        </typeBoundProcedure>
        <typeBoundGenericProcedure>
          <name>add</name>
          <binding>
            <name>add_item</name>
          </binding>
        </typeBoundGenericProcedure>
        <typeBoundProcedure type="F7fd81151f110" pass="pass">
          <name>add_array</name>
          <binding>
            <name>add_array</name>
          </binding>
        </typeBoundProcedure>
        <typeBoundProcedure type="F7fd81151f720" pass="pass">
          <name>add_vector</name>
          <binding>
            <name>add_vector</name>
          </binding>
        </typeBoundProcedure>
        <typeBoundProcedure type="F7fd81151fd30" pass="pass">
          <name>add_iter</name>
          <binding>
            <name>add_iter</name>
          </binding>
        </typeBoundProcedure>
        <typeBoundGenericProcedure>
          <name>add_list</name>
          <binding>
            <name>add_array</name>
            <name>add_vector</name>
            <name>add_iter</name>
          </binding>
        </typeBoundGenericProcedure>
        <typeBoundProcedure type="F7fd811521440" pass="pass">
          <name>set_verbose</name>
          <binding>
            <name>set_verbose</name>
          </binding>
        </typeBoundProcedure>
        <typeBoundProcedure type="F7fd811521a50" pass="pass">
          <name>get_verbose</name>
          <binding>
            <name>get_verbose</name>
          </binding>
        </typeBoundProcedure>
        <typeBoundProcedure type="F7fd811522060" pass="pass">
          <name>length</name>
          <binding>
            <name>length</name>
          </binding>
        </typeBoundProcedure>
        <typeBoundProcedure type="F7fd811522670" pass="pass">
          <name>capacity</name>
          <binding>
            <name>capacity</name>
          </binding>
        </typeBoundProcedure>
        <typeBoundProcedure type="F7fd811522c80" pass="pass">
          <name>includes</name>
          <binding>
            <name>includes</name>
          </binding>
        </typeBoundProcedure>
        <typeBoundProcedure type="F7fd811523290" pass="pass">
          <name>iter</name>
          <binding>
            <name>iter</name>
          </binding>
        </typeBoundProcedure>
        <typeBoundProcedure type="F7fd8115238a0" pass="pass">
          <name>get_iter</name>
          <binding>
            <name>get_iter</name>
          </binding>
        </typeBoundProcedure>
        <typeBoundProcedure type="F7fd811523e80" pass="pass">
          <name>is_equal</name>
          <binding>
            <name>is_equal</name>
          </binding>
        </typeBoundProcedure>
        <typeBoundProcedure type="F7fd811524490" pass="pass">
          <name>is_empty</name>
          <binding>
            <name>is_empty</name>
          </binding>
        </typeBoundProcedure>
        <typeBoundProcedure type="F7fd811524a70" pass="pass">
          <name>to_string</name>
          <binding>
            <name>to_string</name>
          </binding>
        </typeBoundProcedure>
      </typeBoundProcedures>
    </FstructType>
    <FstructType type="S7fd811515f80" is_private="true">
      <symbols>
        <id type="S7fd8115166d0">
          <name>stuff</name>
          <value>
            <functionCall type="V7fd811516b90" is_intrinsic="true">
              <name>null</name>
            </functionCall>
          </value>
        </id>
      </symbols>
    </FstructType>
    <FbasicType type="S7fd8115166d0" is_pointer="true" is_class="true"/>
    <FbasicType type="V7fd811516b90" is_target="true" ref="FnumericAll"/>
    <FbasicType type="S7fd81151a510" ref="S7fd811515f80"/>
    <FbasicType type="S7fd81151a720" is_allocatable="true" ref="S7fd81151a510"/>
    <FbasicType type="A7fd81151a850" is_allocatable="true" ref="S7fd81151a720">
      <indexRange is_assumed_shape="true">
      </indexRange>
    </FbasicType>
    <FstructType type="S7fd811524fe0" is_public="true">
      <symbols>
        <id type="S7fd811525920">
          <name>my_vector</name>
          <value>
            <functionCall type="V7fd811525d00" is_intrinsic="true">
              <name>null</name>
            </functionCall>
          </value>
        </id>
        <id type="Fint">
          <name>current</name>
          <value>
            <FintConstant type="Fint">0</FintConstant>
          </value>
        </id>
      </symbols>
      <typeBoundProcedures>
        <typeBoundProcedure type="F7fd811526f50" pass="pass">
          <name>set_vector</name>
          <binding>
            <name>set_vector</name>
          </binding>
        </typeBoundProcedure>
        <typeBoundProcedure type="F7fd811527560" pass="pass">
          <name>more</name>
          <binding>
            <name>more</name>
          </binding>
        </typeBoundProcedure>
        <typeBoundProcedure type="F7fd811527b70" pass="pass">
          <name>next</name>
          <binding>
            <name>next</name>
          </binding>
        </typeBoundProcedure>
        <typeBoundProcedure type="F7fd811528180" pass="pass">
          <name>pos</name>
          <binding>
            <name>pos</name>
          </binding>
        </typeBoundProcedure>
      </typeBoundProcedures>
    </FstructType>
    <FbasicType type="S7fd811525920" is_public="true" is_pointer="true" is_class="true" ref="S7fd811518110"/>
    <FbasicType type="V7fd811525d00" is_target="true" ref="FnumericAll"/>
    <FbasicType type="F7fd811512f00" ref="F7fd811511ed0"/>
    <FbasicType type="F7fd811512db0" ref="F7fd811512f00"/>
    <FbasicType type="F7fd8115133d0" ref="F7fd8115121f0"/>
    <FbasicType type="F7fd811513280" ref="F7fd8115133d0"/>
    <FfunctionType type="F7fd8115045d0" return_type="Flogical" is_recursive="true">
      <params>
        <name type="S7fd811504a00" imported_id="S7fdf4ad0d220">this</name>
        <name type="S7fd811504da0" imported_id="S7fdf4ad0d820">that</name>
      </params>
    </FfunctionType>
    <FbasicType type="F7fd811502a90" ref="F7fd8115045d0"/>
    <FbasicType type="F7fd811502e30" ref="F7fd811502a90"/>
    <FfunctionType type="F7fd811505290" return_type="C7fd811505530" is_recursive="true">
      <params>
        <name type="S7fd8115057c0" imported_id="S7fdf4ad0f8f0">this</name>
      </params>
    </FfunctionType>
    <FbasicType type="C7fd811505b40" ref="Fcharacter">
      <len is_assumed_shape="true">
      </len>
    </FbasicType>
    <FbasicType type="C7fd811505530" is_allocatable="true" ref="C7fd811505b40"/>
    <FbasicType type="F7fd8115032f0" ref="F7fd811505290"/>
    <FbasicType type="F7fd8115036a0" ref="F7fd8115032f0"/>
    <FfunctionType type="F7fd8115412c0" return_type="Fvoid" is_private="true">
      <params>
        <name type="S7fd811542130">this</name>
        <name type="S7fd8115427d0">copy</name>
      </params>
    </FfunctionType>
    <FbasicType type="S7fd811542130" intent="in" is_class="true" ref="S7fd811518110"/>
    <FbasicType type="S7fd8115427d0" intent="inout" is_class="true" ref="S7fd811518110"/>
    <FbasicType type="F7fd81151ae70" ref="F7fd8115412c0"/>
    <FfunctionType type="F7fd811529120" return_type="Fvoid" is_private="true">
      <params>
        <name type="S7fd81152a280">this</name>
        <name type="L7fd81152aab0">verbose</name>
        <name type="I7fd81152b2e0">initial_size</name>
      </params>
    </FfunctionType>
    <FbasicType type="S7fd81152a280" intent="out" is_class="true" ref="S7fd811518110"/>
    <FbasicType type="L7fd81152aab0" intent="in" is_optional="true" ref="Flogical"/>
    <FbasicType type="I7fd81152b2e0" intent="in" is_optional="true" ref="Fint"/>
    <FbasicType type="F7fd81151b440" ref="F7fd811529120"/>
    <FfunctionType type="F7fd811532780" return_type="Fvoid" is_private="true">
      <params>
        <name type="S7fd811533bd0">this</name>
        <name type="A7fd8115344b0">items</name>
        <name type="L7fd811534ce0">verbose</name>
        <name type="I7fd811535510">initial_size</name>
      </params>
    </FfunctionType>
    <FbasicType type="S7fd811533bd0" intent="out" is_class="true" ref="S7fd811518110"/>
    <FbasicType type="S7fd811534380" intent="in" is_target="true" is_class="true"/>
    <FbasicType type="A7fd8115344b0" intent="in" is_target="true" is_class="true" ref="S7fd811534380">
      <indexRange is_assumed_shape="true">
      </indexRange>
    </FbasicType>
    <FbasicType type="L7fd811534ce0" intent="in" is_optional="true" ref="Flogical"/>
    <FbasicType type="I7fd811535510" intent="in" is_optional="true" ref="Fint"/>
    <FbasicType type="F7fd81151ba30" ref="F7fd811532780"/>
    <FfunctionType type="F7fd811548060" return_type="Fvoid" is_recursive="true" is_private="true">
      <params>
        <name type="S7fd811548be0">this</name>
      </params>
    </FfunctionType>
    <FbasicType type="S7fd811548be0" intent="inout" is_class="true" ref="S7fd811518110"/>
    <FbasicType type="F7fd81151c040" ref="F7fd811548060"/>
    <FfunctionType type="F7fd81154dc60" return_type="Fvoid" is_private="true">
      <params>
        <name type="S7fd81154e7e0">this</name>
      </params>
    </FfunctionType>
    <FbasicType type="S7fd81154e7e0" intent="inout" is_class="true" ref="S7fd811518110"/>
    <FbasicType type="F7fd81151c650" ref="F7fd81154dc60"/>
    <FfunctionType type="F7fd811552a80" return_type="Fvoid" is_private="true">
      <params>
        <name type="S7fd811553600">this</name>
      </params>
    </FfunctionType>
    <FbasicType type="S7fd811553600" intent="inout" is_class="true" ref="S7fd811518110"/>
    <FbasicType type="F7fd81151cc60" ref="F7fd811552a80"/>
    <FfunctionType type="F7fd81155cb20" return_type="S7fd81155e6c0" is_private="true">
      <params>
        <name type="S7fd81155d990">this</name>
        <name type="I7fd81155e140">idx</name>
      </params>
    </FfunctionType>
    <FbasicType type="S7fd81155e6c0" is_pointer="true" is_class="true"/>
    <FbasicType type="S7fd81155d990" intent="in" is_class="true" ref="S7fd811518110"/>
    <FbasicType type="I7fd81155e140" intent="in" ref="Fint"/>
    <FbasicType type="F7fd81151d270" ref="F7fd81155cb20"/>
    <FbasicType type="S7fd81151d140" ref="S7fd81155e6c0"/>
    <FfunctionType type="F7fd811582190" return_type="Fvoid" is_private="true">
      <params>
        <name type="S7fd8115832f0">this</name>
        <name type="I7fd811583aa0">idx</name>
        <name type="S7fd811584120">my_stuff</name>
      </params>
    </FfunctionType>
    <FbasicType type="S7fd8115832f0" intent="inout" is_class="true" ref="S7fd811518110"/>
    <FbasicType type="I7fd811583aa0" intent="in" ref="Fint"/>
    <FbasicType type="S7fd811584120" intent="in" is_target="true" is_class="true"/>
    <FbasicType type="F7fd81151d880" ref="F7fd811582190"/>
    <FfunctionType type="F7fd811562890" return_type="Fint" is_private="true">
      <params>
        <name type="S7fd8115639f0">this</name>
        <name type="S7fd811563ff0">my_stuff</name>
        <name type="I7fd811564820">offset</name>
      </params>
    </FfunctionType>
    <FbasicType type="S7fd8115639f0" intent="in" is_class="true" ref="S7fd811518110"/>
    <FbasicType type="S7fd811563ff0" intent="in" is_class="true"/>
    <FbasicType type="I7fd811564820" intent="in" is_optional="true" ref="Fint"/>
    <FbasicType type="F7fd81151de90" ref="F7fd811562890"/>
    <FfunctionType type="F7fd81156ae60" return_type="Fvoid" is_recursive="true" is_private="true">
      <params>
        <name type="S7fd81156bcd0">this</name>
        <name type="S7fd81156c350">new_stuff</name>
      </params>
    </FfunctionType>
    <FbasicType type="S7fd81156bcd0" intent="inout" is_class="true" ref="S7fd811518110"/>
    <FbasicType type="S7fd81156c350" intent="in" is_target="true" is_class="true"/>
    <FbasicType type="F7fd81151e4a0" ref="F7fd81156ae60"/>
    <FfunctionType type="F7fd811573fb0" return_type="Fvoid" is_private="true">
      <params>
        <name type="S7fd811574e20">this</name>
        <name type="A7fd811575700">items</name>
      </params>
    </FfunctionType>
    <FbasicType type="S7fd811574e20" intent="inout" is_class="true" ref="S7fd811518110"/>
    <FbasicType type="S7fd8115755d0" intent="in" is_target="true" is_class="true"/>
    <FbasicType type="A7fd811575700" intent="in" is_target="true" is_class="true" ref="S7fd8115755d0">
      <indexRange is_assumed_shape="true">
      </indexRange>
    </FbasicType>
    <FbasicType type="F7fd81151f110" ref="F7fd811573fb0"/>
    <FfunctionType type="F7fd8115797a0" return_type="Fvoid" is_private="true">
      <params>
        <name type="S7fd81157a610">this</name>
        <name type="S7fd81157acb0">that</name>
      </params>
    </FfunctionType>
    <FbasicType type="S7fd81157a610" intent="inout" is_class="true" ref="S7fd811518110"/>
    <FbasicType type="S7fd81157acb0" intent="in" is_class="true" ref="S7fd811518110"/>
    <FbasicType type="F7fd81151f720" ref="F7fd8115797a0"/>
    <FfunctionType type="F7fd81157e6f0" return_type="Fvoid" is_private="true">
      <params>
        <name type="S7fd81157f560">this</name>
        <name type="S7fd81157fab0">iter</name>
      </params>
    </FfunctionType>
    <FbasicType type="S7fd81157f560" intent="inout" is_class="true" ref="S7fd811518110"/>
    <FbasicType type="S7fd81157fab0" is_class="true" ref="S7fd811524fe0"/>
    <FbasicType type="F7fd81151fd30" ref="F7fd81157e6f0"/>
    <FfunctionType type="F7fd8115895f0" return_type="Fvoid" is_private="true">
      <params>
        <name type="S7fd81158a460">this</name>
        <name type="L7fd81158ab90">value</name>
      </params>
    </FfunctionType>
    <FbasicType type="S7fd81158a460" intent="inout" is_class="true" ref="S7fd811518110"/>
    <FbasicType type="L7fd81158ab90" is_optional="true" ref="Flogical"/>
    <FbasicType type="F7fd811521440" ref="F7fd8115895f0"/>
    <FfunctionType type="F7fd81158d900" return_type="Flogical" is_private="true">
      <params>
        <name type="S7fd81158e480">this</name>
      </params>
    </FfunctionType>
    <FbasicType type="S7fd81158e480" intent="in" is_class="true" ref="S7fd811518110"/>
    <FbasicType type="F7fd811521a50" ref="F7fd81158d900"/>
    <FfunctionType type="F7fd81158fb30" return_type="Fint" is_private="true">
      <params>
        <name type="S7fd8115906b0">this</name>
      </params>
    </FfunctionType>
    <FbasicType type="S7fd8115906b0" intent="in" is_class="true" ref="S7fd811518110"/>
    <FbasicType type="F7fd811522060" ref="F7fd81158fb30"/>
    <FfunctionType type="F7fd811591d40" return_type="Fint" is_private="true">
      <params>
        <name type="S7fd8115928c0">this</name>
      </params>
    </FfunctionType>
    <FbasicType type="S7fd8115928c0" intent="in" is_class="true" ref="S7fd811518110"/>
    <FbasicType type="F7fd811522670" ref="F7fd811591d40"/>
    <FfunctionType type="F7fd811593fd0" return_type="Flogical" is_private="true">
      <params>
        <name type="S7fd811594e40">this</name>
        <name type="S7fd811595440">my_stuff</name>
      </params>
    </FfunctionType>
    <FbasicType type="S7fd811594e40" intent="in" is_class="true" ref="S7fd811518110"/>
    <FbasicType type="S7fd811595440" intent="in" is_class="true"/>
    <FbasicType type="F7fd811522c80" ref="F7fd811593fd0"/>
    <FfunctionType type="F7fd81159c620" return_type="S7fd81159c4f0" is_private="true">
      <params>
        <name type="S7fd81159d1a0">this</name>
      </params>
    </FfunctionType>
    <FbasicType type="S7fd81159c4f0" ref="S7fd811524fe0"/>
    <FbasicType type="S7fd81159d1a0" intent="in" is_class="true" ref="S7fd811518110"/>
    <FbasicType type="F7fd811523290" ref="F7fd81159c620"/>
    <FbasicType type="S7fd811523160" ref="S7fd81159c4f0"/>
    <FfunctionType type="F7fd8115998e0" return_type="Fvoid" is_private="true">
      <params>
        <name type="S7fd81159a750">this</name>
        <name type="S7fd81159aea0">iter</name>
      </params>
    </FfunctionType>
    <FbasicType type="S7fd81159a750" intent="in" is_class="true" ref="S7fd811518110"/>
    <FbasicType type="S7fd81159ad70" ref="S7fd811524fe0"/>
    <FbasicType type="S7fd81159aea0" intent="out" ref="S7fd81159ad70"/>
    <FbasicType type="F7fd8115238a0" ref="F7fd8115998e0"/>
    <FfunctionType type="F7fd81159e9e0" result_name="equal" return_type="Flogical" is_recursive="true" is_private="true">
      <params>
        <name type="S7fd81159f850">this</name>
        <name type="S7fd81159fe50">that</name>
      </params>
    </FfunctionType>
    <FbasicType type="S7fd81159f850" intent="in" is_class="true" ref="S7fd811518110"/>
    <FbasicType type="S7fd81159fe50" intent="in" is_class="true"/>
    <FbasicType type="F7fd811523e80" ref="F7fd81159e9e0"/>
    <FfunctionType type="F7fd811597370" return_type="Flogical" is_private="true">
      <params>
        <name type="S7fd811597ef0">this</name>
      </params>
    </FfunctionType>
    <FbasicType type="S7fd811597ef0" intent="in" is_class="true" ref="S7fd811518110"/>
    <FbasicType type="F7fd811524490" ref="F7fd811597370"/>
    <FfunctionType type="F7fd811607710" return_type="C7fd811608b90" is_recursive="true" is_private="true">
      <params>
        <name type="S7fd811608290">this</name>
      </params>
    </FfunctionType>
    <FbasicType type="C7fd811608a60" ref="Fcharacter">
      <len is_assumed_shape="true">
      </len>
    </FbasicType>
    <FbasicType type="C7fd811608b90" is_allocatable="true" ref="C7fd811608a60"/>
    <FbasicType type="S7fd811608290" intent="in" is_class="true" ref="S7fd811518110"/>
    <FbasicType type="F7fd811524a70" ref="F7fd811607710"/>
    <FfunctionType type="F7fd8116100c0" return_type="Fvoid" is_private="true">
      <params>
        <name type="S7fd811610f30">this</name>
        <name type="S7fd811611700">my_vector</name>
      </params>
    </FfunctionType>
    <FbasicType type="S7fd811610f30" intent="inout" is_class="true" ref="S7fd811524fe0"/>
    <FbasicType type="S7fd8116115d0" is_target="true" ref="S7fd811518110"/>
    <FbasicType type="S7fd811611700" intent="in" is_target="true" ref="S7fd8116115d0"/>
    <FbasicType type="F7fd811526f50" ref="F7fd8116100c0"/>
    <FfunctionType type="F7fd811613650" return_type="Flogical" is_private="true">
      <params>
        <name type="S7fd8116141d0">this</name>
      </params>
    </FfunctionType>
    <FbasicType type="S7fd8116141d0" intent="in" is_class="true" ref="S7fd811524fe0"/>
    <FbasicType type="F7fd811527560" ref="F7fd811613650"/>
    <FfunctionType type="F7fd8116162a0" return_type="Flogical" is_private="true">
      <params>
        <name type="S7fd811617110">this</name>
        <name type="S7fd811617790">item</name>
      </params>
    </FfunctionType>
    <FbasicType type="S7fd811617110" intent="inout" is_class="true" ref="S7fd811524fe0"/>
    <FbasicType type="S7fd811617790" intent="out" is_pointer="true" is_class="true"/>
    <FbasicType type="F7fd811527b70" ref="F7fd8116162a0"/>
    <FfunctionType type="F7fd81161c5f0" return_type="Fint" is_private="true">
      <params>
        <name type="S7fd81161d170">this</name>
      </params>
    </FfunctionType>
    <FbasicType type="S7fd81161d170" intent="in" is_class="true" ref="S7fd811524fe0"/>
    <FbasicType type="F7fd811528180" ref="F7fd81161c5f0"/>
  </typeTable>
  <identifiers>
    <id type="S7fd811511cc0" imported_id="S7fdf4ad09370" sclass="ftype_name" original_name="object" declared_in="self_object">
      <name>object</name>
    </id>
    <id type="F7fd811511ed0" sclass="ffunc" original_name="is_equal_function" declared_in="self_object">
      <name>is_equal_function</name>
    </id>
    <id type="F7fd8115121f0" sclass="ffunc" original_name="to_string_function" declared_in="self_object">
      <name>to_string_function</name>
    </id>
    <id type="F7fd811512510" sclass="ffunc" original_name="object_equal" declared_in="self_object">
      <name>object_equal</name>
    </id>
    <id type="F7fd811512830" sclass="ffunc" original_name="object_pointer_string" declared_in="self_object">
      <name>object_pointer_string</name>
    </id>
    <id type="F7fd811512b50" sclass="ffunc" original_name="object_string" declared_in="self_object">
      <name>object_string</name>
    </id>
    <id type="S7fd811518110" sclass="ftype_name" original_name="vector_ref" declared_in="self_vector_ref">
      <name>vector_ref</name>
    </id>
    <id type="S7fd811524fe0" sclass="ftype_name" original_name="vector_iterator" declared_in="self_vector_ref">
      <name>vector_iterator</name>
    </id>
  </identifiers>
  <declarations>
  </declarations>
  <interfaceDecls>
  </interfaceDecls>
  <aux_info>
  </aux_info>
</OmniFortranModule>
