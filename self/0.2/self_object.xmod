<OmniFortranModule version="1.0">
  <name>self_object</name>
  <depends>
  </depends>
  <typeTable>
    <FstructType type="S7fdf4ad09370" is_public="true" is_abstract="true">
      <symbols>
      </symbols>
      <typeBoundProcedures>
        <typeBoundProcedure type="F7fdf4ad09c70" pass="pass" is_deferred="true">
          <name>is_equal</name>
          <binding>
            <name>is_equal_function</name>
          </binding>
        </typeBoundProcedure>
        <typeBoundProcedure type="F7fdf4ad0a430" pass="pass" is_deferred="true">
          <name>to_string</name>
          <binding>
            <name>to_string_function</name>
          </binding>
        </typeBoundProcedure>
        <typeBoundGenericProcedure is_operator="true">
          <name>==</name>
          <binding>
            <name>is_equal</name>
          </binding>
        </typeBoundGenericProcedure>
      </typeBoundProcedures>
    </FstructType>
    <FfunctionType type="F7fdf4ad0bf40" return_type="Flogical" is_recursive="true" is_public="true">
      <params>
        <name type="S7fdf4ad0d220">this</name>
        <name type="S7fdf4ad0d820">that</name>
      </params>
    </FfunctionType>
    <FbasicType type="S7fdf4ad0ca80" ref="S7fdf4ad09370"/>
    <FbasicType type="S7fdf4ad0d220" intent="in" is_class="true" ref="S7fdf4ad0ca80"/>
    <FbasicType type="S7fdf4ad0d820" intent="in" is_class="true"/>
    <FfunctionType type="F7fdf4ad0e7d0" return_type="C7fdf4ad0eba0" is_recursive="true" is_public="true">
      <params>
        <name type="S7fdf4ad0f8f0">this</name>
      </params>
    </FfunctionType>
    <FbasicType type="C7fdf4ad100c0" ref="Fcharacter">
      <len is_assumed_shape="true">
      </len>
    </FbasicType>
    <FbasicType type="C7fdf4ad0eba0" is_allocatable="true" ref="C7fdf4ad100c0"/>
    <FbasicType type="S7fdf4ad0f150" ref="S7fdf4ad09370"/>
    <FbasicType type="S7fdf4ad0f8f0" intent="in" is_class="true" ref="S7fdf4ad0f150"/>
    <FfunctionType type="F7fdf4ad11a40" result_name="equal" return_type="Flogical" is_recursive="true" is_public="true">
      <params>
        <name type="S7fdf4ad12810">this</name>
        <name type="S7fdf4ad12e10">that</name>
      </params>
    </FfunctionType>
    <FbasicType type="S7fdf4ad12810" intent="in" is_class="true"/>
    <FbasicType type="S7fdf4ad12e10" intent="in" is_class="true"/>
    <FbasicType type="C7fdf4ad14020" is_allocatable="true" ref="Fcharacter">
      <len>
        <FintConstant type="Fint">1</FintConstant>
      </len>
    </FbasicType>
    <FbasicType type="C7fdf4ad14230" is_allocatable="true" ref="C7fdf4ad14020"/>
    <FbasicType type="A7fdf4ad14360" is_allocatable="true" ref="C7fdf4ad14230">
      <indexRange is_assumed_shape="true">
      </indexRange>
    </FbasicType>
    <FfunctionType type="F7fdf4ad1f560" return_type="Flogical"/>
    <FfunctionType type="F7fdf4ad1d9c0" return_type="A7fdf4ad1de00"/>
    <FbasicType type="A7fdf4ad1de00" is_allocatable="true" ref="C7fdf4ad14230">
      <indexRange is_assumed_shape="true">
      </indexRange>
    </FbasicType>
    <FfunctionType type="F7fdf4ad1df30" return_type="A7fdf4ad1de00"/>
    <FbasicType type="S7fdf4ad15240" ref="S7fdf4ad09370"/>
    <FbasicType type="C7fdf4ad16160" ref="Fcharacter">
      <len is_assumed_size="true">
      </len>
    </FbasicType>
    <FbasicType type="C7fdf4ad16c40" ref="Fcharacter">
      <len is_assumed_size="true">
      </len>
    </FbasicType>
    <FbasicType type="A7fdf4ad1f0a0" ref="Flogical">
      <indexRange is_assumed_shape="true">
      </indexRange>
    </FbasicType>
    <FbasicType type="A7fdf4ad1d890" is_allocatable="true" ref="C7fdf4ad14230">
      <indexRange is_assumed_shape="true">
      </indexRange>
    </FbasicType>
    <FfunctionType type="F7fdf4ad20590" result_name="string" return_type="C7fdf4ad21ad0" is_public="true">
      <params>
        <name type="S7fdf4ad210f0">this</name>
      </params>
    </FfunctionType>
    <FbasicType type="C7fdf4ad218c0" is_allocatable="true" ref="Fcharacter">
      <len is_assumed_shape="true">
      </len>
    </FbasicType>
    <FbasicType type="C7fdf4ad21ad0" is_allocatable="true" ref="C7fdf4ad218c0"/>
    <FbasicType type="S7fdf4ad210f0" intent="in" is_pointer="true" is_class="true"/>
    <FfunctionType type="F7fdf4ad22740" return_type="Flogical"/>
    <FfunctionType type="F7fdf4ad23160" return_type="FnumericAll"/>
    <FfunctionType type="F7fdf4ad24690" result_name="string" return_type="C7fdf4ad25b50" is_recursive="true" is_public="true">
      <params>
        <name type="S7fdf4ad25170">this</name>
      </params>
    </FfunctionType>
    <FbasicType type="C7fdf4ad25940" is_allocatable="true" ref="Fcharacter">
      <len is_assumed_shape="true">
      </len>
    </FbasicType>
    <FbasicType type="C7fdf4ad25b50" is_allocatable="true" ref="C7fdf4ad25940"/>
    <FbasicType type="S7fdf4ad25170" intent="in" is_class="true"/>
    <FbasicType type="C7fdf4ad23820" ref="Fcharacter">
      <len>
        <FintConstant type="Fint">6</FintConstant>
      </len>
    </FbasicType>
    <FfunctionType type="F7fdf4ad28260" return_type="Fcharacter"/>
    <FfunctionType type="F7fdf4ad2e960" return_type="Fcharacter"/>
    <FfunctionType type="F7fdf4ad29410" return_type="C7fdf4ad2ce40"/>
    <FbasicType type="C7fdf4ad2ce40" ref="Fcharacter">
      <len is_assumed_size="true">
      </len>
    </FbasicType>
    <FfunctionType type="F7fdf4ad2cf70" return_type="C7fdf4ad2ce40"/>
    <FbasicType type="S7fdf4ad264c0" ref="S7fdf4ad09370"/>
    <FbasicType type="C7fdf4ad289f0" ref="Fcharacter">
      <len>
        <FintConstant type="Fint">4</FintConstant>
      </len>
    </FbasicType>
    <FbasicType type="C7fdf4ad292e0" is_allocatable="true" ref="C7fdf4ad25940"/>
    <FbasicType type="C7fdf4ad2aff0" ref="Fcharacter">
      <len>
        <FintConstant type="Fint">4</FintConstant>
      </len>
    </FbasicType>
    <FbasicType type="C7fdf4ad2b800" is_allocatable="true" ref="C7fdf4ad25940"/>
    <FbasicType type="C7fdf4ad2c180" ref="Fcharacter">
      <len is_assumed_size="true">
      </len>
    </FbasicType>
    <FbasicType type="C7fdf4ad2d580" ref="Fcharacter">
      <len>
        <FintConstant type="Fint">0</FintConstant>
      </len>
    </FbasicType>
    <FbasicType type="C7fdf4ad2d210" ref="Fcharacter">
      <len>
        <FintConstant type="Fint">0</FintConstant>
      </len>
    </FbasicType>
    <FbasicType type="C7fdf4ad2f0f0" ref="Fcharacter">
      <len>
        <FintConstant type="Fint">4</FintConstant>
      </len>
    </FbasicType>
    <FbasicType type="C7fdf4ad2fa00" ref="Fcharacter">
      <len>
        <FintConstant type="Fint">14</FintConstant>
      </len>
    </FbasicType>
    <FbasicType type="F7fdf4ad09c70" ref="F7fdf4ad0bf40"/>
    <FbasicType type="F7fdf4ad0a430" ref="F7fdf4ad0e7d0"/>
  </typeTable>
  <identifiers>
    <id type="S7fdf4ad09370" sclass="ftype_name" original_name="object" declared_in="self_object">
      <name>object</name>
    </id>
    <id type="F7fdf4ad0bf40" sclass="ffunc" original_name="is_equal_function" declared_in="self_object">
      <name>is_equal_function</name>
    </id>
    <id type="F7fdf4ad0e7d0" sclass="ffunc" original_name="to_string_function" declared_in="self_object">
      <name>to_string_function</name>
    </id>
    <id type="F7fdf4ad11a40" sclass="ffunc" original_name="object_equal" declared_in="self_object">
      <name>object_equal</name>
    </id>
    <id type="F7fdf4ad20590" sclass="ffunc" original_name="object_pointer_string" declared_in="self_object">
      <name>object_pointer_string</name>
    </id>
    <id type="F7fdf4ad24690" sclass="ffunc" original_name="object_string" declared_in="self_object">
      <name>object_string</name>
    </id>
  </identifiers>
  <declarations>
  </declarations>
  <interfaceDecls>
  </interfaceDecls>
  <aux_info>
  </aux_info>
</OmniFortranModule>
